
Randomized with seed 31857

reviews
  index
[32m    displays a list of all reviews[0m
  create, edit, and destroy a review as standard user
[32m    allows the user to create, edit, and destroy a Review[0m
  create a review, edit and destroy a different review as admin
[32m    allows the user to create, edit, and destroy a Review[0m

School
  methods
[32m    returns options for sorted by[0m
  associations
[32m    should have many departments[0m
  scopes
    search_query
[32m      gets all schools with query[0m
    with_avg_rating_gte
[32m      gets all reviews with query in review[0m
    with_avg_work_lte
[32m      gets all reviews with query in review[0m
    with_avg_difficulty_lte
[32m      gets all reviews with query in review[0m
    with_avg_grade_gte
[32m      gets all reviews with query in review[0m
    sorted_by
[32m      gets all courses sorted[0m
  validations
[32m    should validate that :short_name cannot be empty/falsy[0m
[32m    should validate that :name cannot be empty/falsy[0m
[32m    should validate that :short_name is case-insensitively unique[0m
[32m    should validate that :name is case-insensitively unique[0m

ReviewsController
  signed in user
    GET #edit
[32m      returns an access denied message[0m
    GET #index
[32m      returns the right information[0m
  anonymous user
    GET #index
[32m      returns the right information[0m
    GET #new
[32m      returns a success response[0m
  admin user
    PUT #update
      with valid attributes
[32m        updates review in the database[0m
[32m        renders the update template[0m
[32m        assigns the review to review[0m
      with invalid attributes
[32m        renders the update template[0m
    GET #new
[32m      returns a success response[0m
[32m      renders the new template[0m
    DELETE #destroy
[32m      redirects to the reviews list[0m
[32m      deletes the review[0m
    GET #edit
[32m      renders the edit template[0m
[32m      returns a success response[0m
    POST #create
      with invalid attributes
[32m        doesn't save the new review in the database[0m
[32m        renders the new template[0m
      with valid attributes
[32m        saves the new add on in the database[0m
[32m        renders the show template[0m
[32m        assigns the new review to review[0m
    GET #show
[32m      renders the show template[0m
[32m      returns a success response[0m
    GET #index
[32m      calls where for all reviews for a given school[0m
[32m      renders the index template[0m
[32m      returns a success response[0m
[32m      calls all[0m
[32m      assigns reviews to @reviews[0m
[32m      calls where for all reviews for a given department[0m

departments
  create, edit, and destroy a department
[32m    allows the user to create, edit, and destroy a Department[0m
  index
[32m    displays a list of all departments[0m

users
  index
[32m    does not display users link[0m
  create, edit, and destroy a user
[32m    allows the user to create, edit, and destroy a user[0m

CoursesController
  signed in user
    GET #new
[32m      returns a success response[0m
    GET #index
[32m      returns a success response[0m
[32m      renders the index template[0m
  admin user
    PUT #update
      with valid attributes
[32m        updates course in the database[0m
[32m        assigns the course to course[0m
[32m        renders the update template[0m
      with invalid attributes
[32m        renders the update template[0m
    GET #index
[32m      gets all courses[0m
[32m      gets courses for school[0m
[32m      gets courses for department[0m
[32m      returns a success response[0m
[32m      renders the index template[0m
    GET #show
[32m      renders the show template[0m
[32m      returns a success response[0m
    POST #create
      with invalid attributes
[32m        renders the create template[0m
[32m        doesn't save the new course in the database[0m
      with valid attributes
[32m        renders the create template[0m
[32m        assigns the new course to course[0m
[32m        saves the new add on in the database[0m
    GET #edit
[32m      renders the edit template[0m
[32m      returns a success response[0m
    DELETE #destroy
[32m      redirects to the courses list[0m
[32m      deletes the course[0m
    GET #new
[32m      returns a success response[0m
[32m      renders the new template[0m
  anonymous user
    GET #index
[32m      renders the index template[0m
[32m      returns a success response[0m
    GET #new
[32m      returns a success response[0m

SchoolsController
  routing
[32m    routes to #update via PATCH[0m
[32m    routes to #destroy[0m
[32m    routes to #update via PUT[0m
[32m    routes to #create[0m
[32m    routes to #show[0m
[32m    routes to #new[0m
[32m    routes to #index[0m
[32m    routes to #edit[0m

ReviewsController
  routing
[32m    routes to #update via PUT[0m
[32m    routes to #index[0m
[32m    routes to #show[0m
[32m    routes to #create[0m
[32m    routes to #edit[0m
[32m    routes to #new[0m
[32m    routes to #destroy[0m
[32m    routes to #update via PATCH[0m

Course
  scopes
    search_query
[32m      gets all courses with query[0m
    with_avg_rating_gte
[32m      gets all reviews with query in review[0m
    with_department_id
[32m      gets all reviews with query in review[0m
    with_avg_work_lte
[32m      gets all reviews with query in review[0m
    with_department_id
[32m      gets all reviews with query in review[0m
    with_avg_grade_gte
[32m      gets all reviews with query in review[0m
    with_avg_difficulty_lte
[32m      gets all reviews with query in review[0m
    sorted_by
[32m      gets all courses sorted[0m
  methods
[32m    returns the full course number[0m
[32m    returns options for sorted by[0m
  validations
[32m    should validate that :name cannot be empty/falsy[0m
[32m    should validate that :number is case-insensitively unique within the scope of :department_id[0m
[32m    should validate that :number cannot be empty/falsy[0m
  associations
[32m    should belong to department required: true[0m

User
  associations
[32m    should have many reviews[0m
  scopes
    admins
[32m      gets all users that are admins[0m
    search_query
[32m      gets all users with query[0m
    sorted_by
[32m      gets all users sorted[0m
  methods
    admin?
[32m      returns true if user is admin[0m
  validations
[32m    validates complexity of password[0m
[32m    should validate that :email is case-insensitively unique[0m
[32m    should validate that :email cannot be empty/falsy[0m

Department
  scopes
    search_query
[32m      gets all departments with query[0m
    with_avg_rating_gte
[32m      gets all reviews with query in review[0m
    with_avg_grade_gte
[32m      gets all reviews with query in review[0m
    with_school_id
[32m      gets all reviews with query in review[0m
    with_avg_work_lte
[32m      gets all reviews with query in review[0m
    sorted_by
[32m      gets all departments sorted[0m
    with_avg_difficulty_lte
[32m      gets all reviews with query in review[0m
  validations
[32m    should validate that :short_name is case-insensitively unique within the scope of :school_id[0m
[32m    should validate that :short_name cannot be empty/falsy[0m
[32m    should validate that :name cannot be empty/falsy[0m
  associations
[32m    should belong to school required: true[0m
  methods
[32m    returns options for sorted by[0m

DepartmentsController
  signed in user
    GET #new
[32m      returns a success response[0m
    GET #index
[32m      returns a success response[0m
[32m      renders the index template[0m
  admin user
    POST #create
      with valid attributes
[32m        renders the create template[0m
[32m        saves the new add on in the database[0m
[32m        assigns the new department to department[0m
      with invalid attributes
[32m        renders the create template[0m
[32m        doesn't save the new department in the database[0m
    DELETE #destroy
[32m      redirects to the departments list[0m
[32m      deletes the department[0m
    GET #new
[32m      returns a success response[0m
[32m      renders the new template[0m
    GET #show
[32m      returns a success response[0m
[32m      renders the show template[0m
    GET #edit
[32m      renders the edit template[0m
[32m      returns a success response[0m
    GET #index
[32m      renders the index template[0m
[32m      returns a success response[0m
[32m      gets all departments[0m
[32m      gets departments for school[0m
    PUT #update
      with valid attributes
[32m        renders the update template[0m
[32m        assigns the department to department[0m
[32m        updates department in the database[0m
      with invalid attributes
[32m        renders the update template[0m
  anonymous user
    GET #new
[32m      returns a success response[0m
    GET #index
[32m      returns a success response[0m
[32m      renders the index template[0m

Review
  methods
    #letter_grade
[32m      returns an D[0m
[32m      returns Error if not expected[0m
[32m      returns an C[0m
[32m      returns an B[0m
[32m      returns an A[0m
[32m      returns an F[0m
    #options_for_sorted_by
[32m      returns all fields that can be sorted[0m
    #display_grade
[32m      displays the percentage and letter grade[0m
  validations
[32m    should validate that :user_id is case-sensitively unique within the scope of :course_id[0m
[32m    should validate that :rating cannot be empty/falsy[0m
  associations
[32m    should belong to user required: true[0m
[32m    should belong to course required: true[0m
[32m    should have one department through course[0m
  scopes
    with_difficulty_lte
[32m      gets all reviews with query in review[0m
    with_rating_gte
[32m      gets all reviews with query in review[0m
    with_course_id
[32m      gets all reviews with query in review[0m
    sorted_by
[32m      gets all reviews sorted[0m
    with_school_id
[32m      gets all reviews with query in review[0m
    search_query
[32m      gets all reviews with query[0m
    with_work_required_lte
[32m      gets all reviews with query in review[0m

UsersController
  anonymous user
    GET #index
[32m      returns an access denied[0m
  admin
    PUT #reactivate
[32m      updates user[0m
[32m      redirects to users[0m
    PUT #deactivate
[32m      updates user[0m
[32m      redirects to users[0m
    PUT #demote
[32m      updates user[0m
[32m      redirects to users[0m
    PUT #promote
[32m      updates user[0m
[32m      redirects to users[0m
    GET #index
[32m      renders the index template[0m
[32m      assigns users to @users[0m
[32m      returns a success response[0m
  signed in user
    GET #index
[32m      returns no errors[0m
    GET #deactivate
[32m      returns an access denied message[0m
    PUT #deactivate
[32m      returns a access denied[0m

SchoolsController
  GET #index
[32m    returns a success response[0m
[32m    renders the index template[0m
[32m    assigns schools to @schools[0m
  GET #edit
[32m    renders the edit template[0m
[32m    returns a success response[0m
  DELETE #destroy
[32m    deletes the school[0m
[32m    redirects to the schools list[0m
  GET #show
[32m    renders the show template[0m
  GET #new
[32m    renders the new template[0m
[32m    returns a success response[0m
  PUT #update
    with invalid attributes
[32m      renders the update template[0m
[32m      doesn't save the new school in the database[0m
    with valid attributes
[32m      updates school in the database[0m
[32m      renders the update template[0m
[32m      assigns the school to school[0m
  POST #create
    with invalid attributes
[32m      doesn't save the new school in the database[0m
[32m      renders the create template[0m
    with valid attributes
[32m      renders the create template[0m
[32m      assigns the new school to school[0m
[32m      saves the new add on in the database[0m

UsersController
  routing
[32m    routes to #index[0m
[32m    routes to #promote via PUT[0m
[32m    routes to #deactivate via PUT[0m
[32m    routes to #demote via PUT[0m
[32m    routes to #reactivate via PUT[0m

courses
  index
[32m    displays a list of all courses[0m
  create, edit, and destroy a course
[32m    allows the user to create, edit, and destroy a Course[0m

schools
  create, edit, and destroy a school
[32m    allows the user to create, edit, and destroy a school[0m
  index
[32m    displays a list of all schools[0m

DepartmentsController
  routing
[32m    routes to #update via PUT[0m
[32m    routes to #edit[0m
[32m    routes to #update via PATCH[0m
[32m    routes to #destroy[0m
[32m    routes to #create[0m
[32m    routes to #index[0m
[32m    routes to #show[0m
[32m    routes to #new[0m

CoursesController
  routing
[32m    routes to #new[0m
[32m    routes to #update via PUT[0m
[32m    routes to #create[0m
[32m    routes to #show[0m
[32m    routes to #destroy[0m
[32m    routes to #update via PATCH[0m
[32m    routes to #index[0m
[32m    routes to #edit[0m

Finished in 7.93 seconds (files took 3.89 seconds to load)
[32m231 examples, 0 failures[0m

Randomized with seed 31857

